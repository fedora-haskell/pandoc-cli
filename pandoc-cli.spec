# generated by cabal-rpm-2.1.2 --subpackage
# https://docs.fedoraproject.org/en-US/packaging-guidelines/Haskell/

%global hsluamodulesystem hslua-module-system-1.1.0.1
%global ipynb ipynb-0.2
%global jirawikimarkup jira-wiki-markup-1.5.1
%global citeproc citeproc-0.8.1
%global commonmark commonmark-0.2.3
%global commonmarkextensions commonmark-extensions-0.2.3.5
%global commonmarkpandoc commonmark-pandoc-0.2.1.3
%global hsluamodulepath hslua-module-path-1.1.0
%global unicodecollation unicode-collation-0.1.3.4
%global base64 base64-0.4.2.4
%global gridtables gridtables-0.1.0.0
%global hsluamoduledoclayout hslua-module-doclayout-1.1.0
%global hsluamoduleversion hslua-module-version-1.1.0
%global lpeg lpeg-1.0.4
%global pandocluamarshal pandoc-lua-marshal-0.2.2
%global hslualist hslua-list-1.1.1
%global pandoc pandoc-3.0.1
%global hsluacli hslua-cli-1.4.1
%global pandocluaengine pandoc-lua-engine-0.2.1.2
%global pandocserver pandoc-server-0.1.0.3

%global subpkgs %{hsluamodulesystem} %{ipynb} %{jirawikimarkup} %{unicodecollation} %{citeproc} %{commonmark} %{commonmarkextensions} %{commonmarkpandoc} %{hsluamodulepath} %{base64} %{gridtables} %{hsluamoduledoclayout} %{hsluamoduleversion} %{lpeg} %{hslualist} %{pandocluamarshal} %{hsluacli} %{pandoc} %{pandocluaengine} %{pandocserver}

# testsuite missing deps: tasty-golden

Name:           pandoc-cli
Version:        0.1.1.1
# can only be reset when all subpkgs bumped
Release:        23%{?dist}
Summary:        Conversion between markup formats

License:        GPL-2.0-or-later
Url:            https://hackage.haskell.org/package/%{name}
# Begin cabal-rpm sources:
Source0:        https://hackage.haskell.org/package/%{name}-%{version}/%{name}-%{version}.tar.gz
Source1:        https://hackage.haskell.org/package/%{pandoc}/%{pandoc}.tar.gz
Source2:        https://hackage.haskell.org/package/%{hsluamodulesystem}/%{hsluamodulesystem}.tar.gz
Source3:        https://hackage.haskell.org/package/%{ipynb}/%{ipynb}.tar.gz
Source4:        https://hackage.haskell.org/package/%{jirawikimarkup}/%{jirawikimarkup}.tar.gz
Source5:        https://hackage.haskell.org/package/%{citeproc}/%{citeproc}.tar.gz
Source6:        https://hackage.haskell.org/package/%{commonmark}/%{commonmark}.tar.gz
Source7:        https://hackage.haskell.org/package/%{commonmarkextensions}/%{commonmarkextensions}.tar.gz
Source8:        https://hackage.haskell.org/package/%{commonmarkpandoc}/%{commonmarkpandoc}.tar.gz
Source9:        https://hackage.haskell.org/package/%{hsluamodulepath}/%{hsluamodulepath}.tar.gz
Source10:        https://hackage.haskell.org/package/%{unicodecollation}/%{unicodecollation}.tar.gz
Source11:       https://hackage.haskell.org/package/%{base64}/%{base64}.tar.gz
Source12:       https://hackage.haskell.org/package/%{gridtables}/%{gridtables}.tar.gz
Source13:       https://hackage.haskell.org/package/%{hsluamoduledoclayout}/%{hsluamoduledoclayout}.tar.gz
Source14:       https://hackage.haskell.org/package/%{hsluamoduleversion}/%{hsluamoduleversion}.tar.gz
Source15:       https://hackage.haskell.org/package/%{lpeg}/%{lpeg}.tar.gz
Source16:       https://hackage.haskell.org/package/%{pandocluamarshal}/%{pandocluamarshal}.tar.gz
Source17:       https://hackage.haskell.org/package/%{hslualist}/%{hslualist}.tar.gz
Source18:        https://hackage.haskell.org/package/%{hsluacli}/%{hsluacli}.tar.gz
Source19:        https://hackage.haskell.org/package/%{pandocluaengine}/%{pandocluaengine}.tar.gz
Source20:        https://hackage.haskell.org/package/%{pandocserver}/%{pandocserver}.tar.gz
# End cabal-rpm sources
Source21:       https://hackage.haskell.org/package/%{base64}/base64.cabal#/%{base64}.cabal
#Patch0:         pandoc-version-disable-hslua.patch

# Begin cabal-rpm deps:
BuildRequires:  ghc-Cabal-devel
BuildRequires:  ghc-rpm-macros-extra
BuildRequires:  ghc-base-devel
#BuildRequires:  ghc-hslua-cli-devel
BuildRequires:  ghc-pandoc-devel
#BuildRequires:  ghc-pandoc-lua-engine-devel
#BuildRequires:  ghc-pandoc-server-devel
BuildRequires:  ghc-safe-devel
BuildRequires:  ghc-temporary-devel
BuildRequires:  ghc-text-devel
BuildRequires:  ghc-wai-extra-devel
BuildRequires:  ghc-warp-devel
# for missing dep 'hslua-cli':
BuildRequires:  ghc-bytestring-devel
BuildRequires:  ghc-hslua-core-devel
BuildRequires:  ghc-hslua-marshalling-devel
#BuildRequires:  ghc-hslua-repl-devel
BuildRequires:  ghc-lua-devel
BuildRequires:  ghc-unix-devel
%if %{with ghc_prof}
BuildRequires:  ghc-bytestring-prof
BuildRequires:  ghc-hslua-core-prof
BuildRequires:  ghc-hslua-marshalling-prof
#BuildRequires:  ghc-hslua-repl-prof
BuildRequires:  ghc-lua-prof
BuildRequires:  ghc-unix-prof
%endif
# for missing dep 'pandoc-lua-engine':
BuildRequires:  ghc-SHA-devel
BuildRequires:  ghc-aeson-devel
BuildRequires:  ghc-bytestring-devel
BuildRequires:  ghc-citeproc-devel
BuildRequires:  ghc-containers-devel
BuildRequires:  ghc-data-default-devel
BuildRequires:  ghc-doclayout-devel
BuildRequires:  ghc-doctemplates-devel
BuildRequires:  ghc-exceptions-devel
BuildRequires:  ghc-hslua-devel
BuildRequires:  ghc-hslua-module-doclayout-devel
BuildRequires:  ghc-hslua-module-path-devel
BuildRequires:  ghc-hslua-module-system-devel
BuildRequires:  ghc-hslua-module-text-devel
BuildRequires:  ghc-hslua-module-version-devel
#BuildRequires:  ghc-hslua-module-zip-devel
#BuildRequires:  ghc-hslua-repl-devel
BuildRequires:  ghc-lpeg-devel
BuildRequires:  ghc-mtl-devel
BuildRequires:  ghc-pandoc-lua-marshal-devel
BuildRequires:  ghc-pandoc-types-devel
BuildRequires:  ghc-parsec-devel
%if %{with ghc_prof}
BuildRequires:  ghc-SHA-prof
BuildRequires:  ghc-aeson-prof
BuildRequires:  ghc-bytestring-prof
BuildRequires:  ghc-citeproc-prof
BuildRequires:  ghc-containers-prof
BuildRequires:  ghc-data-default-prof
BuildRequires:  ghc-doclayout-prof
BuildRequires:  ghc-doctemplates-prof
BuildRequires:  ghc-emojis-prof
BuildRequires:  ghc-exceptions-prof
BuildRequires:  ghc-file-embed-prof
BuildRequires:  ghc-filepath-prof
#BuildRequires:  ghc-gridtables-prof
BuildRequires:  ghc-haddock-library-prof
BuildRequires:  ghc-http-client-prof
BuildRequires:  ghc-http-client-tls-prof
BuildRequires:  ghc-http-types-prof
#BuildRequires:  ghc-ipynb-prof
#BuildRequires:  ghc-jira-wiki-markup-prof
BuildRequires:  ghc-mime-types-prof
BuildRequires:  ghc-mtl-prof
BuildRequires:  ghc-network-prof
BuildRequires:  ghc-network-uri-prof
BuildRequires:  ghc-pandoc-types-prof
BuildRequires:  ghc-parsec-prof
BuildRequires:  ghc-pretty-prof
BuildRequires:  ghc-pretty-show-prof
BuildRequires:  ghc-process-prof
BuildRequires:  ghc-random-prof
BuildRequires:  ghc-safe-prof
BuildRequires:  ghc-scientific-prof
BuildRequires:  ghc-skylighting-prof
BuildRequires:  ghc-skylighting-core-prof
BuildRequires:  ghc-split-prof
BuildRequires:  ghc-syb-prof
BuildRequires:  ghc-tagsoup-prof
BuildRequires:  ghc-temporary-prof
BuildRequires:  ghc-texmath-prof
BuildRequires:  ghc-text-prof
BuildRequires:  ghc-text-conversions-prof
BuildRequires:  ghc-time-prof
#BuildRequires:  ghc-unicode-collation-prof
BuildRequires:  ghc-unicode-transforms-prof
BuildRequires:  ghc-unix-prof
BuildRequires:  ghc-xml-prof
BuildRequires:  ghc-xml-conduit-prof
BuildRequires:  ghc-xml-types-prof
BuildRequires:  ghc-yaml-prof
BuildRequires:  ghc-zip-archive-prof
BuildRequires:  ghc-zlib-prof
%endif
Requires:       %{name}-common = %{version}-%{release}
# for missing dep 'hslua-module-system':
BuildRequires:  ghc-hslua-core-devel
BuildRequires:  ghc-hslua-marshalling-devel
BuildRequires:  ghc-hslua-packaging-devel
%if %{with ghc_prof}
BuildRequires:  ghc-hslua-core-prof
BuildRequires:  ghc-hslua-marshalling-prof
BuildRequires:  ghc-hslua-packaging-prof
%endif
# for missing dep 'ipynb':
BuildRequires:  ghc-base64-bytestring-devel
BuildRequires:  ghc-unordered-containers-devel
%if %{with ghc_prof}
BuildRequires:  ghc-base64-bytestring-prof
BuildRequires:  ghc-unordered-containers-prof
%endif
# for missing dep 'citeproc':
BuildRequires:  ghc-transformers-devel
BuildRequires:  ghc-uniplate-devel
BuildRequires:  ghc-vector-devel
%if %{with ghc_prof}
BuildRequires:  ghc-transformers-prof
BuildRequires:  ghc-uniplate-prof
BuildRequires:  ghc-vector-prof
%endif
# for missing dep 'commonmark':
BuildRequires:  ghc-transformers-devel
BuildRequires:  ghc-unicode-data-devel
%if %{with ghc_prof}
BuildRequires:  ghc-transformers-prof
BuildRequires:  ghc-unicode-data-prof
%endif
# for missing dep 'commonmark-extensions':
BuildRequires:  ghc-transformers-devel
%if %{with ghc_prof}
BuildRequires:  ghc-transformers-prof
%endif
# for missing dep 'hslua-module-path':
BuildRequires:  ghc-hslua-core-devel
BuildRequires:  ghc-hslua-marshalling-devel
BuildRequires:  ghc-hslua-packaging-devel
%if %{with ghc_prof}
BuildRequires:  ghc-hslua-core-prof
BuildRequires:  ghc-hslua-marshalling-prof
BuildRequires:  ghc-hslua-packaging-prof
%endif
# for missing dep 'unicode-collation':
BuildRequires:  ghc-template-haskell-devel
BuildRequires:  ghc-th-lift-instances-devel
%if %{with ghc_prof}
BuildRequires:  ghc-template-haskell-prof
BuildRequires:  ghc-th-lift-instances-prof
%endif
# for missing dep 'base64':
BuildRequires:  ghc-text-short-devel
%if %{with ghc_prof}
BuildRequires:  ghc-text-short-prof
%endif
# for missing dep 'hslua-module-doclayout':
BuildRequires:  ghc-hslua-devel
%if %{with ghc_prof}
BuildRequires:  ghc-hslua-prof
%endif
# for missing dep 'hslua-module-version':
BuildRequires:  ghc-hslua-core-devel
BuildRequires:  ghc-hslua-marshalling-devel
BuildRequires:  ghc-hslua-packaging-devel
%if %{with ghc_prof}
BuildRequires:  ghc-hslua-core-prof
BuildRequires:  ghc-hslua-marshalling-prof
BuildRequires:  ghc-hslua-packaging-prof
%endif
# for missing dep 'lpeg':
BuildRequires:  ghc-lua-devel
%if %{with ghc_prof}
BuildRequires:  ghc-lua-prof
%endif
# for missing dep 'pandoc-lua-marshal':
BuildRequires:  ghc-hslua-devel
#BuildRequires:  ghc-hslua-list-devel
BuildRequires:  ghc-hslua-marshalling-devel
BuildRequires:  ghc-lua-devel
%if %{with ghc_prof}
BuildRequires:  ghc-hslua-prof
#BuildRequires:  ghc-hslua-list-prof
BuildRequires:  ghc-hslua-marshalling-prof
BuildRequires:  ghc-lua-prof
%endif
# End cabal-rpm deps

%description
Pandoc is a Haskell library for converting from one markup format to another.
The formats it can handle include

- light markup formats (many variants of Markdown, reStructuredText, AsciiDoc,
Org-mode, Muse, Textile, txt2tags) - HTML formats (HTML 4 and 5) - Ebook
formats (EPUB v2 and v3, FB2) - Documentation formats (GNU TexInfo, Haddock) -
Roff formats (man, ms) - TeX formats (LaTeX, ConTeXt) - XML formats (DocBook 4
and 5, JATS, TEI Simple, OpenDocument) - Outline formats (OPML) - Bibliography
formats (BibTeX, BibLaTeX, CSL JSON, CSL YAML, RIS) - Word processor formats
(Docx, RTF, ODT) - Interactive notebook formats (Jupyter notebook ipynb) - Page
layout formats (InDesign ICML) - Wiki markup formats (MediaWiki, DokuWiki,
TikiWiki, TWiki, Vimwiki, XWiki, ZimWiki, Jira wiki, Creole) - Slide show
formats (LaTeX Beamer, PowerPoint, Slidy, reveal.js, Slideous, S5, DZSlides) -
Data formats (CSV and TSV tables) - PDF (via external programs such as pdflatex
or wkhtmltopdf)

Pandoc can convert mathematical content in documents between TeX, MathML, Word
equations, roff eqn, and plain text. It includes a powerful system for
automatic citations and bibliographies, and it can be customized extensively
using templates, filters, and custom readers and writers written in Lua.

For pdf output please also install pandoc-pdf or weasyprint.


%package common
Summary:        %{name} common files
# templates are dual: GPLv2+ or BSD
# dzslides js and css: DWTFYWTPL
License: GPL-2.0-or-later AND (GPL-2.0-or-later OR BSD-3-Clause) AND WTFPL
BuildArch:      noarch

%description common
This package provides the %{name} common data files.


%package pdf
Summary:        Metapackage for pandoc pdf support
Requires:       %{name} = %{version}
Requires:       texlive-collection-latex
Requires:       texlive-ec
Obsoletes:      pandoc-markdown2pdf < %{version}-%{release}

%description pdf
This package pulls in the TeXLive latex package collection needed by
pandoc to generate pdf output using pdflatex.

To use --latex-engine=xelatex or lualatex, install texlive-collection-xetex
or texlive-collection-luatex respectively.


%global main_version %{version}

%if %{defined ghclibdir}
%ghc_lib_subpackage -l MIT %{hsluamodulesystem}
%ghc_lib_subpackage -l BSD-3-Clause %{ipynb}
%ghc_lib_subpackage -l MIT %{jirawikimarkup}
%ghc_lib_subpackage -l BSD-2-Clause %{citeproc}
%ghc_lib_subpackage -l BSD-3-Clause %{commonmark}
%ghc_lib_subpackage -l BSD-3-Clause %{commonmarkextensions}
%ghc_lib_subpackage -l BSD-3-Clause %{commonmarkpandoc}
%ghc_lib_subpackage -l MIT %{hsluamodulepath}
%ghc_lib_subpackage -l BSD-2-Clause %{unicodecollation}
%ghc_lib_subpackage -l BSD-3-Clause %{base64}
%ghc_lib_subpackage -l MIT %{gridtables}
%ghc_lib_subpackage -l MIT %{hsluamoduledoclayout}
%ghc_lib_subpackage -l MIT %{hsluamoduleversion}
%ghc_lib_subpackage -l MIT %{lpeg}
%ghc_lib_subpackage -l MIT %{pandocluamarshal}
%ghc_lib_subpackage -l MIT %{hslualist}
%ghc_lib_subpackage -l GPL-2.0-or-later %{pandoc}
%endif

%global version %{main_version}


%prep
# Begin cabal-rpm setup:
%setup -q -a1 -a2 -a3 -a4 -a5 -a6 -a7 -a8 -a9 -a10 -a11 -a12 -a13 -a14 -a15 -a16 -a17 -a18 -a19 -a20
# End cabal-rpm setup
%ifarch ppc64le
%patch -P0 -p1 -b .orig
%endif
cp -p %{SOURCE21} %{base64}/base64.cabal


%build
# Begin cabal-rpm build:
%ghc_libs_build %{subpkgs}
%define cabal_configure_options -f lua
%ghc_bin_build
# End cabal-rpm build


%install
# Begin cabal-rpm install
%ghc_libs_install %{subpkgs}
%ghc_bin_install
#mv %{buildroot}%{_ghcdocdir}{,-common}
# End cabal-rpm install

rm %{buildroot}%{_datadir}/%{pandoc}/COPYRIGHT

ln -s pandoc %{buildroot}%{_bindir}/hsmarkdown

install -m 0644 -p -D %{pandoc}/man/pandoc.1 %{buildroot}%{_mandir}/man1/pandoc.1

echo %{_bindir}/jira-wiki-markup >> %{jirawikimarkup}/ghc-jira-wiki-markup.files

mkdir -p %{buildroot}%{_datadir}/bash-completion/completions/
touch %{buildroot}%{_datadir}/bash-completion/completions/%{name}


%check
%{buildroot}%{_bindir}/pandoc -v


%post


%files
%license COPYING.md
# Begin cabal-rpm files:
%{_bindir}/pandoc
# End cabal-rpm files
%{_bindir}/hsmarkdown
%{_mandir}/man1/pandoc.1*
%ghost %{_datadir}/bash-completion/completions/%{name}


%files common
# Begin cabal-rpm files:
%license %{pandoc}/COPYING.md
%doc %{pandoc}/AUTHORS.md %{pandoc}/BUGS %{pandoc}/CONTRIBUTING.md %{pandoc}/README.md %{pandoc}/changelog.md
%{_datadir}/%{pandoc}
# End cabal-rpm files

%files pdf


%changelog
